@model IEnumerable<MusicLibraryTest2.Models.User>

@{
    Layout = null;
    string sortBy = "id";
    bool isAscending = true;
}

<h1>Sorting Variables:</h1>
<ul>
    <li>Sort By: @ViewBag.sortBy</li>
    <li>Sort Order: @(ViewBag.isAscending ? "Ascending" : "Descending")</li>
</ul>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>UserList</title>
</head>
<body>
    <p>
        @Html.ActionLink("Home", "HomePage", "Home")
        <br /><br />
        @Html.ActionLink("Sort By ID", "UserList", new { sortBy = "id", ViewBag.isAscending })
        <span style="margin: 0 10px;">|</span>
        @Html.ActionLink("Sort By Name", "UserList", new { sortBy = "name", ViewBag.isAscending })
        <span style="margin: 0 10px;">|</span>
        @Html.ActionLink("Sort By Created Date", "UserList", new { sortBy = "created", ViewBag.isAscending })
        <span style="margin: 0 10px;">|</span>
        <br /><br />
        @Html.ActionLink("Ascending", "UserList", new { ViewBag.sortBy, isAscending = true })
        <span style="margin: 0 10px;">|</span>
        @Html.ActionLink("Descending", "UserList", new { ViewBag.sortBy, isAscending = false })
        <span style="margin: 0 10px;">|</span>
    </p>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }
    </style>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Role)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastLoginAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsArchived)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastLoginAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsArchived)
                </td>
            </tr>
        }

    </table>
</body>
</html>
